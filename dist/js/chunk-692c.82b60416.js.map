{"version":3,"sources":["webpack:///./src/views/Dashboard/Indicators.vue?ed9d","webpack:///src/views/Dashboard/Indicators.vue","webpack:///./src/views/Dashboard/Indicators.vue?f732","webpack:///./src/views/Dashboard/Indicators.vue","webpack:///./node_modules/recorder-js/lib/index.js","webpack:///./node_modules/inline-worker/index.js","webpack:///./node_modules/recorder-js/lib/microphone.js","webpack:///./node_modules/recorder-js/index.js","webpack:///./src/views/Dashboard/Indicators.vue?9c4d"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","color","staticClass","md12","fab","size","disabled","recordState","on","click","$event","startRecording","domProps","innerHTML","_s","_v","stopState","stopRecording","id","_e","staticRenderFns","audioContext","window","AudioContext","webkitAudioContext","recorder","recorder_js_default","a","navigator","mediaDevices","getUserMedia","audio","then","stream","init","catch","err","console","log","Indicatorsvue_type_script_lang_js_","data","translate","timer","stop","isRecording","blob","created","mounted","methods","_this","start","minutesLabel","document","getElementById","secondsLabel","totalSeconds","setTime","pad","parseInt","val","valString","length","setInterval","_this2","_ref","buffer","recordingslist","url","URL","createObjectURL","li","createElement","au","hf","controls","src","href","download","Date","toISOString","appendChild","clear","Dashboard_Indicatorsvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","defineProperty","exports","value","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_microphone","__webpack_require__","_microphone2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","defaultConfig","nFrequencyBars","onAnalysed","Recorder","config","arguments","undefined","assign","audioInput","realAudioInput","inputPoint","audioRecorder","rafID","analyserContext","recIndex","updateAnalysers","bind","Promise","resolve","createGain","createMediaStreamSource","connect","analyserNode","createAnalyser","fftSize","zeroGain","gain","destination","reject","record","_this3","getBuffer","exportWAV","requestAnimationFrame","freqByteData","Uint8Array","frequencyBinCount","getByteFrequencyData","Array","lastNonZero","datum","idx","Math","floor","lineTo","handler","filename","forceDownload","global","WORKER_ENABLED","Blob","Worker","InlineWorker","func","self","functionBody","toString","trim","match","type","postMessage","setTimeout","onmessage","module","_inlineWorker","_inlineWorker2","bufferLen","numChannels","mimeType","Microphone","source","recording","callbacks","context","node","createScriptProcessor","createJavaScriptNode","call","onaudioprocess","e","channel","push","inputBuffer","getChannelData","worker","command","recLength","recBuffers","sampleRate","initBuffers","buffers","mergeBuffers","interleaved","interleave","dataview","encodeWAV","audioBlob","result","Float32Array","offset","set","inputL","inputR","index","inputIndex","floatTo16BitPCM","output","input","s","max","min","setInt16","writeString","view","string","setUint8","charCodeAt","samples","ArrayBuffer","DataView","setUint32","setUint16","cb","pop","callback","Error","style","body","revokeObjectURL","removeChild","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Indicators_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Indicators_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/chunk-692c.82b60416.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{attrs:{\"color\":\"white py-5\"}},[_c('v-flex',{staticClass:\"text-xs-center mb-5\",attrs:{\"md12\":\"\"}},[_c('v-btn',{staticClass:\"recordicon\",attrs:{\"fab\":\"\",\"color\":\"error\",\"size\":\"120\",\"disabled\":_vm.recordState},on:{\"click\":function($event){_vm.startRecording()}}},[_c('v-icon',{attrs:{\"size\":\"60\"},domProps:{\"innerHTML\":_vm._s('mic')}},[_vm._v(\"mdi-android\")])],1),_c('v-btn',{staticClass:\"recordicon\",attrs:{\"fab\":\"\",\"color\":\"error\",\"disabled\":_vm.stopState},on:{\"click\":function($event){_vm.stopRecording()}}},[_c('v-icon',{attrs:{\"size\":\"60\"},domProps:{\"innerHTML\":_vm._s('mic_off')}},[_vm._v(\"mdi-android\")])],1)],1),(_vm.timer)?_c('v-flex',{staticClass:\"text-xs-center mb-5\",attrs:{\"md12\":\"\"}},[_c('label',{attrs:{\"id\":\"minutes\"}},[_vm._v(\"00\")]),_c('label',{attrs:{\"id\":\"colon\"}},[_vm._v(\":\")]),_c('label',{attrs:{\"id\":\"seconds\"}},[_vm._v(\"00\")])]):_vm._e(),(_vm.stop)?_c('v-flex',{staticClass:\"text-xs-center\",attrs:{\"md12\":\"\"}},[_c('div',{staticClass:\"text-center\"},[_c('h2',[_vm._v(\"下載音檔\")]),_c('ul',{attrs:{\"id\":\"recordingslist\"}})])]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <v-card color=\"white py-5\">\n        <v-flex md12 class=\"text-xs-center mb-5\">\n            <v-btn fab class=\"recordicon\" color=\"error\" size=\"120\" @click=\"startRecording()\" :disabled=\"recordState\"><v-icon size=\"60\" v-html=\"'mic'\">mdi-android</v-icon></v-btn>\n            <v-btn fab class=\"recordicon\" color=\"error\" @click=\"stopRecording()\" :disabled=\"stopState\"><v-icon size=\"60\" v-html=\"'mic_off'\">mdi-android</v-icon></v-btn>\n        </v-flex>\n        <v-flex v-if=\"timer\" md12 class=\"text-xs-center mb-5\">\n            <label id=\"minutes\">00</label>\n            <label id=\"colon\">:</label>\n            <label id=\"seconds\">00</label>\n        </v-flex>\n\n        <v-flex v-if=\"stop\" md12 class=\"text-xs-center\">\n            <div class=\"text-center\">\n                <h2>下載音檔</h2>\n                <ul id=\"recordingslist\"></ul>\n            </div>\n        </v-flex>                \n    </v-card>\n</template>\n\n<script>\n    import Recorder from 'recorder-js';\n    const audioContext =  new (window.AudioContext || window.webkitAudioContext)();\n \n    const recorder = new Recorder(audioContext, {\n    \n    });\n    navigator.mediaDevices.getUserMedia({audio: true})\n    .then(stream => recorder.init(stream))\n    .catch(err => console.log('Uh oh... unable to get stream...', err));    \n    export default {\n        data() {\n            return {\n                translate:[],\n                recordState: false,\n                stopState: true,\n                timer: true,\n                stop: false,\n                isRecording: false,\n                blob: null\n            }\n        },\n        created(){\n            //  navigator.mediaDevices.getUserMedia({audio: true})\n            // .then(stream => recorder.init(stream))\n            // .catch(err => console.log('Uh oh... unable to get stream...', err));\n        },\n        mounted(){\n            // navigator.mediaDevices.getUserMedia({audio: true})\n            // .then(stream => recorder.init(stream))\n            // .catch(err => console.log('Uh oh... unable to get stream...', err));\n        },\n        methods: {\n            startRecording() {\n                recorder.start().then(() => this.isRecording = true);\n                this.recordState = true;\n                this.stopState = false;\n\n                var minutesLabel = document.getElementById(\"minutes\");\n                var secondsLabel = document.getElementById(\"seconds\");\n                var totalSeconds = 0;\n                setInterval(setTime, 1000);\n\n                function setTime()\n                {\n                    ++totalSeconds;\n                    secondsLabel.innerHTML = pad(totalSeconds%60);\n                    minutesLabel.innerHTML = pad(parseInt(totalSeconds/60));\n                }\n\n                function pad(val)\n                {\n                    var valString = val + \"\";\n                    if(valString.length < 2)\n                    {\n                        return \"0\" + valString;\n                    }\n                    else\n                    {\n                        return valString;\n                    }\n                }\n\n\n            },\n            stopRecording() {\n                recorder.stop().then((({blob,buffer})=>{\n                    this.blob = blob\n                    console.log(\"blob:\" + this.blob)\n                    var recordingslist = document.getElementById(\"recordingslist\");\n                    var url = URL.createObjectURL(this.blob);\n                    console.log(\"url:\" + url)\n                    var li = document.createElement('li');\n                    console.log(\"li:\" + li)\n                    var au = document.createElement('audio');\n                    var hf = document.createElement('a');\n\n                    au.controls = true;\n                    au.src = url;\n                    hf.href = url;\n                    hf.download = new Date().toISOString() + '.wav';\n                    hf.innerHTML = hf.download;\n                    li.appendChild(au);\n                    li.appendChild(hf);\n                    recordingslist.appendChild(li);\n                }));\n                this.recordState = true;\n                this.stopState = true;\n                this.timer = false;\n                this.stop = true;\n                recorder.clear()\n\n                // createDownloadLink();\n\n            }\n        },\n    }\n\n\n// const createDownloadLink= () => recorder.exportWAV(function(blob) {\n//         console.log(\"blob:\" + blob)\n//         var recordingslist = document.getElementById(\"recordingslist\");\n//         var url = URL.createObjectURL(blob);\n//         console.log(\"url:\" + url)\n//         var li = document.createElement('li');\n//         console.log(\"li:\" + li)\n//         var au = document.createElement('audio');\n//         var hf = document.createElement('a');\n\n//         au.controls = true;\n//         au.src = url;\n//         hf.href = url;\n//         hf.download = new Date().toISOString() + '.wav';\n//         hf.innerHTML = hf.download;\n//         li.appendChild(au);\n//         li.appendChild(hf);\n//         recordingslist.appendChild(li);\n//     });\n\n</script>\n<style>\n    #recordingslist{list-style: none; }\n    #recordingslist audio { display: block; margin:10px auto; }\n    .recordicon{width: 100px;height:100px; }\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Indicators.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Indicators.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Indicators.vue?vue&type=template&id=68785de9&\"\nimport script from \"./Indicators.vue?vue&type=script&lang=js&\"\nexport * from \"./Indicators.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Indicators.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Indicators.vue\"\nexport default component.exports","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _microphone = require('./microphone');\n\nvar _microphone2 = _interopRequireDefault(_microphone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  nFrequencyBars: 255,\n  onAnalysed: null\n};\n\nvar Recorder = function () {\n  function Recorder(audioContext) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Recorder);\n\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.audioContext = audioContext;\n    this.audioInput = null;\n    this.realAudioInput = null;\n    this.inputPoint = null;\n    this.audioRecorder = null;\n    this.rafID = null;\n    this.analyserContext = null;\n    this.recIndex = 0;\n    this.stream = null;\n\n    this.updateAnalysers = this.updateAnalysers.bind(this);\n  }\n\n  _createClass(Recorder, [{\n    key: 'init',\n    value: function init(stream) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.inputPoint = _this.audioContext.createGain();\n\n        _this.stream = stream;\n\n        _this.realAudioInput = _this.audioContext.createMediaStreamSource(stream);\n        _this.audioInput = _this.realAudioInput;\n        _this.audioInput.connect(_this.inputPoint);\n\n        _this.analyserNode = _this.audioContext.createAnalyser();\n        _this.analyserNode.fftSize = 2048;\n        _this.inputPoint.connect(_this.analyserNode);\n\n        _this.audioRecorder = new _microphone2.default(_this.inputPoint);\n\n        var zeroGain = _this.audioContext.createGain();\n        zeroGain.gain.value = 0.0;\n\n        _this.inputPoint.connect(zeroGain);\n        zeroGain.connect(_this.audioContext.destination);\n\n        _this.updateAnalysers();\n\n        resolve();\n      });\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.audioRecorder) {\n          reject('Not currently recording');\n          return;\n        }\n\n        _this2.audioRecorder.clear();\n        _this2.audioRecorder.record();\n\n        resolve(_this2.stream);\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        _this3.audioRecorder.stop();\n\n        _this3.audioRecorder.getBuffer(function (buffer) {\n          _this3.audioRecorder.exportWAV(function (blob) {\n            return resolve({ buffer: buffer, blob: blob });\n          });\n        });\n      });\n    }\n  }, {\n    key: 'updateAnalysers',\n    value: function updateAnalysers() {\n      if (this.config.onAnalysed) {\n        requestAnimationFrame(this.updateAnalysers);\n\n        var freqByteData = new Uint8Array(this.analyserNode.frequencyBinCount);\n\n        this.analyserNode.getByteFrequencyData(freqByteData);\n\n        var data = new Array(255);\n        var lastNonZero = 0;\n        var datum = void 0;\n\n        for (var idx = 0; idx < 255; idx += 1) {\n          datum = Math.floor(freqByteData[idx]) - Math.floor(freqByteData[idx]) % 5;\n\n          if (datum !== 0) {\n            lastNonZero = idx;\n          }\n\n          data[idx] = datum;\n        }\n\n        this.config.onAnalysed({ data: data, lineTo: lastNonZero });\n      }\n    }\n  }, {\n    key: 'setOnAnalysed',\n    value: function setOnAnalysed(handler) {\n      this.config.onAnalysed = handler;\n    }\n  }]);\n\n  return Recorder;\n}();\n\nRecorder.download = function download(blob) {\n  var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'audio';\n\n  _microphone2.default.forceDownload(blob, filename + '.wav');\n};\n\nexports.default = Recorder;","var WORKER_ENABLED = !!(global === global.window && global.URL && global.Blob && global.Worker);\n\nfunction InlineWorker(func, self) {\n  var _this = this;\n  var functionBody;\n\n  self = self || {};\n\n  if (WORKER_ENABLED) {\n    functionBody = func.toString().trim().match(\n      /^function\\s*\\w*\\s*\\([\\w\\s,]*\\)\\s*{([\\w\\W]*?)}$/\n    )[1];\n\n    return new global.Worker(global.URL.createObjectURL(\n      new global.Blob([ functionBody ], { type: \"text/javascript\" })\n    ));\n  }\n\n  function postMessage(data) {\n    setTimeout(function() {\n      _this.onmessage({ data: data });\n    }, 0);\n  }\n\n  this.self = self;\n  this.self.postMessage = postMessage;\n\n  setTimeout(func.bind(self, self), 0);\n}\n\nInlineWorker.prototype.postMessage = function postMessage(data) {\n  var _this = this;\n\n  setTimeout(function() {\n    _this.self.onmessage({ data: data });\n  }, 0);\n};\n\nmodule.exports = InlineWorker;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable */\n/**\n * License (MIT)\n *\n * Copyright © 2013 Matt Diamond\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n\nvar _inlineWorker = require('inline-worker');\n\nvar _inlineWorker2 = _interopRequireDefault(_inlineWorker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  bufferLen: 4096,\n  numChannels: 1,\n  mimeType: 'audio/wav'\n};\n\nvar Microphone = function () {\n  function Microphone(source, config) {\n    var _this = this;\n\n    _classCallCheck(this, Microphone);\n\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.recording = false;\n\n    this.callbacks = {\n      getBuffer: [],\n      exportWAV: []\n    };\n\n    this.context = source.context;\n    this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n\n    this.node.onaudioprocess = function (e) {\n      if (!_this.recording) return;\n\n      var buffer = [];\n      for (var channel = 0; channel < _this.config.numChannels; channel++) {\n        buffer.push(e.inputBuffer.getChannelData(channel));\n      }\n      _this.worker.postMessage({\n        command: 'record',\n        buffer: buffer\n      });\n    };\n\n    source.connect(this.node);\n    this.node.connect(this.context.destination); //this should not be necessary\n\n    var self = {};\n    this.worker = new _inlineWorker2.default(function () {\n      var recLength = 0,\n          recBuffers = [],\n          sampleRate = void 0,\n          numChannels = void 0;\n\n      this.onmessage = function (e) {\n        switch (e.data.command) {\n          case 'init':\n            init(e.data.config);\n            break;\n          case 'record':\n            record(e.data.buffer);\n            break;\n          case 'exportWAV':\n            exportWAV(e.data.type);\n            break;\n          case 'getBuffer':\n            getBuffer();\n            break;\n          case 'clear':\n            clear();\n            break;\n        }\n      };\n\n      function init(config) {\n        sampleRate = config.sampleRate;\n        numChannels = config.numChannels;\n        initBuffers();\n      }\n\n      function record(inputBuffer) {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel].push(inputBuffer[channel]);\n        }\n        recLength += inputBuffer[0].length;\n      }\n\n      function exportWAV(type) {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        var interleaved = void 0;\n        if (numChannels === 2) {\n          interleaved = interleave(buffers[0], buffers[1]);\n        } else {\n          interleaved = buffers[0];\n        }\n        var dataview = encodeWAV(interleaved);\n        var audioBlob = new Blob([dataview], { type: type });\n\n        this.postMessage({ command: 'exportWAV', data: audioBlob });\n      }\n\n      function getBuffer() {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        this.postMessage({ command: 'getBuffer', data: buffers });\n      }\n\n      function clear() {\n        recLength = 0;\n        recBuffers = [];\n        initBuffers();\n      }\n\n      function initBuffers() {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel] = [];\n        }\n      }\n\n      function mergeBuffers(recBuffers, recLength) {\n        var result = new Float32Array(recLength);\n        var offset = 0;\n        for (var i = 0; i < recBuffers.length; i++) {\n          result.set(recBuffers[i], offset);\n          offset += recBuffers[i].length;\n        }\n        return result;\n      }\n\n      function interleave(inputL, inputR) {\n        var length = inputL.length + inputR.length;\n        var result = new Float32Array(length);\n\n        var index = 0,\n            inputIndex = 0;\n\n        while (index < length) {\n          result[index++] = inputL[inputIndex];\n          result[index++] = inputR[inputIndex];\n          inputIndex++;\n        }\n        return result;\n      }\n\n      function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n          var s = Math.max(-1, Math.min(1, input[i]));\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n      }\n\n      function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i += 1) {\n          view.setUint8(offset + i, string.charCodeAt(i));\n        }\n      }\n\n      function encodeWAV(samples) {\n        var buffer = new ArrayBuffer(44 + samples.length * 2);\n        var view = new DataView(buffer);\n\n        /* RIFF identifier */\n        writeString(view, 0, 'RIFF');\n        /* RIFF chunk length */\n        view.setUint32(4, 36 + samples.length * 2, true);\n        /* RIFF type */\n        writeString(view, 8, 'WAVE');\n        /* format chunk identifier */\n        writeString(view, 12, 'fmt ');\n        /* format chunk length */\n        view.setUint32(16, 16, true);\n        /* sample format (raw) */\n        view.setUint16(20, 1, true);\n        /* channel count */\n        view.setUint16(22, numChannels, true);\n        /* sample rate */\n        view.setUint32(24, sampleRate, true);\n        /* byte rate (sample rate * block align) */\n        view.setUint32(28, sampleRate * 4, true);\n        /* block align (channel count * bytes per sample) */\n        view.setUint16(32, numChannels * 2, true);\n        /* bits per sample */\n        view.setUint16(34, 16, true);\n        /* data chunk identifier */\n        writeString(view, 36, 'data');\n        /* data chunk length */\n        view.setUint32(40, samples.length * 2, true);\n\n        floatTo16BitPCM(view, 44, samples);\n\n        return view;\n      }\n    }, self);\n\n    this.worker.postMessage({\n      command: 'init',\n      config: {\n        sampleRate: this.context.sampleRate,\n        numChannels: this.config.numChannels\n      }\n    });\n\n    this.worker.onmessage = function (e) {\n      var cb = _this.callbacks[e.data.command].pop();\n      if (typeof cb === 'function') {\n        cb(e.data.data);\n      }\n    };\n  }\n\n  _createClass(Microphone, [{\n    key: 'record',\n    value: function record() {\n      this.recording = true;\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.recording = false;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.worker.postMessage({ command: 'clear' });\n    }\n  }, {\n    key: 'getBuffer',\n    value: function getBuffer(cb) {\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.getBuffer.push(cb);\n\n      this.worker.postMessage({ command: 'getBuffer' });\n    }\n  }, {\n    key: 'exportWAV',\n    value: function exportWAV(cb, mimeType) {\n      mimeType = mimeType || this.config.mimeType;\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.exportWAV.push(cb);\n\n      this.worker.postMessage({\n        command: 'exportWAV',\n        type: mimeType\n      });\n    }\n  }]);\n\n  return Microphone;\n}();\n\nMicrophone.forceDownload = function forceDownload(blob, filename) {\n  var a = document.createElement('a');\n\n  a.style = 'display: none';\n  document.body.appendChild(a);\n\n  var url = window.URL.createObjectURL(blob);\n\n  a.href = url;\n  a.download = filename;\n  a.click();\n\n  window.URL.revokeObjectURL(url);\n\n  document.body.removeChild(a);\n};\n\nexports.default = Microphone;","module.exports = require('./lib/index.js');\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Indicators.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Indicators.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}